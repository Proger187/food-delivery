[{"E:\\Курс программирования\\React Projects\\food-delivery\\src\\index.js":"1","E:\\Курс программирования\\React Projects\\food-delivery\\src\\App.js":"2","E:\\Курс программирования\\React Projects\\food-delivery\\src\\data.js":"3","E:\\Курс программирования\\React Projects\\food-delivery\\src\\components\\Header.js":"4","E:\\Курс программирования\\React Projects\\food-delivery\\src\\components\\ProductsList.js":"5","E:\\Курс программирования\\React Projects\\food-delivery\\src\\components\\Footer.js":"6","E:\\Курс программирования\\React Projects\\food-delivery\\src\\components\\Categories.js":"7","E:\\Курс программирования\\React Projects\\food-delivery\\src\\components\\ShowFullItem.js":"8","E:\\Курс программирования\\React Projects\\food-delivery\\src\\components\\Product.js":"9","E:\\Курс программирования\\React Projects\\food-delivery\\src\\components\\Order.js":"10","E:\\Курс программирования\\React Projects\\food-delivery\\src\\components\\Cart.js":"11","E:\\Курс программирования\\React Projects\\food-delivery\\src\\store\\CartReducer.js":"12"},{"size":254,"mtime":1680018652131,"results":"13","hashOfConfig":"14"},{"size":2951,"mtime":1680018691804,"results":"15","hashOfConfig":"14"},{"size":3558,"mtime":1669194113910,"results":"16","hashOfConfig":"14"},{"size":1132,"mtime":1669192616358,"results":"17","hashOfConfig":"14"},{"size":408,"mtime":1680018636325,"results":"18","hashOfConfig":"14"},{"size":285,"mtime":1668359581579,"results":"19","hashOfConfig":"14"},{"size":676,"mtime":1671555003860,"results":"20","hashOfConfig":"14"},{"size":807,"mtime":1669044101272,"results":"21","hashOfConfig":"14"},{"size":2541,"mtime":1669194881509,"results":"22","hashOfConfig":"14"},{"size":1115,"mtime":1669371048593,"results":"23","hashOfConfig":"14"},{"size":1595,"mtime":1669193328505,"results":"24","hashOfConfig":"14"},{"size":399,"mtime":1680018116094,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vqu0cp",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"E:\\Курс программирования\\React Projects\\food-delivery\\src\\index.js",[],[],"E:\\Курс программирования\\React Projects\\food-delivery\\src\\App.js",["69","70"],[],"import ProductsList from './components/ProductsList';\nimport data from './data';\nimport Header from './components/Header';\nimport Categories from './components/Categories';\nimport ShowFullItem from './components/ShowFullItem';\nimport Footer from './components/Footer';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      products:data,\n      orders:[],\n      fullItem:{},\n      showFullItem:false,\n    }\n    this.state.current = this.state.products\n\n    this.addToCart = this.addToCart.bind(this)\n    this.clearCart = this.clearCart.bind(this)\n    this.orderIncrement = this.orderIncrement.bind(this)\n    this.orderDecrement = this.orderDecrement.bind(this)\n    this.deleteOrder = this.deleteOrder.bind(this)\n    this.onOpenItem = this.onOpenItem.bind(this)\n    this.chooseCategory = this.chooseCategory.bind(this)\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <Header onClear={this.clearCart}\n        onDelete={this.deleteOrder} orders={this.state.orders}\n         onUp={this.orderIncrement} onDown={this.orderDecrement}/>\n         <main>\n          <Categories choose={this.chooseCategory}/>\n          <ProductsList onShow={this.onOpenItem} onAdd={this.addToCart} items={this.state.current}/>\n          {this.state.showFullItem && <ShowFullItem onAdd={this.addToCart} onShow={this.onOpenItem} item={this.state.fullItem}/>}\n          <Footer/>\n         </main>\n      </div>\n    );\n  }\n  chooseCategory(category){\n    if(category === 'all'){\n      this.setState({current:this.state.products})\n    }else{\n      this.setState({current:this.state.products.filter(item => item.category === category)})\n    }\n  }\n  onOpenItem(item){\n    this.setState({showFullItem: !this.state.showFullItem, fullItem:item})\n  }\n  clearCart(){\n    this.setState({orders: []})\n  }\n  deleteOrder(item){\n    this.setState({orders: this.state.orders.filter(el => el !== item)})\n  }\n  addToCart(item){\n    let isInCart = false\n    this.state.orders.forEach(el => {\n      if(item.id === el.id && item.size === el.size && item.type === el.type){\n        isInCart = true\n      }\n    })\n    if (isInCart) {\n      const order = this.state.orders.find(el => el.id === item.id && el.size === item.size && item.type === el.type)\n      order.count += 1\n      this.setState({orders: this.state.orders.map(u => u !== order ? u : order)})\n    } else {\n      item.count = 1\n      this.setState({orders: [...this.state.orders, item]})\n    } \n  }\n  orderDecrement(item){\n    if(item.count > 1){\n      item.count -= 1\n      this.setState({orders: this.state.orders.map(u => u !== item ? u : item)})\n    }else{\n      this.setState({orders: this.state.orders.filter(el => el !== item)})\n    }\n  }\n  orderIncrement(item){\n    item.count += 1\n    this.setState({orders: this.state.orders.map(u => u !== item ? u : item)})\n  }\n}\n\nexport default App;","E:\\Курс программирования\\React Projects\\food-delivery\\src\\data.js",[],[],"E:\\Курс программирования\\React Projects\\food-delivery\\src\\components\\Header.js",["71","72","73","74","75"],[],"import React, { Component, useState} from 'react'\r\nimport { FaShoppingCart, FaTrash } from \"react-icons/fa\";\r\nimport Order from './Order';\r\nimport Cart from './Cart';\r\n\r\nexport default function Header(props){\r\n    let [cartOpen, setCartOpen] = useState(false)\r\n    let count = 0\r\n    props.orders.forEach(el => count += el.count);\r\n    let summ = 0\r\n    props.orders.forEach(el => summ += el.count*Number.parseFloat(el.price));\r\n    return (\r\n      <header>\r\n        <div>\r\n            <a className='Logo'><img height='50' src='images/logo.png'/> <div>\r\n            <span>React Pizza</span>\r\n            <p>самая вкусная пицца во вселенной</p>\r\n              </div></a>\r\n        </div>\r\n        <div className='cart-items' onClick={() => setCartOpen(cartOpen = !cartOpen)}>\r\n          <span>{summ}сом</span>\r\n          <div>\r\n          <FaShoppingCart/> {count}\r\n          </div>\r\n        </div>\r\n        {cartOpen && (\r\n              <Cart onClear={props.onClear} onDelete={props.onDelete} onUp={props.onUp} onDown={props.onDown} orders={props.orders}/>\r\n            )}\r\n      </header>\r\n    )\r\n  }\r\n","E:\\Курс программирования\\React Projects\\food-delivery\\src\\components\\ProductsList.js",[],[],"E:\\Курс программирования\\React Projects\\food-delivery\\src\\components\\Footer.js",[],[],"E:\\Курс программирования\\React Projects\\food-delivery\\src\\components\\Categories.js",["76","77","78","79"],[],"import React, { Component } from 'react'\r\nimport {FaPizzaSlice, FaOrcid, FaHamburger, FaYCombinator} from 'react-icons/fa'\r\n\r\nexport class Categories extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            categories:[\r\n                {\r\n                    'key':'all',\r\n                    'name':'Все'\r\n                }\r\n            ]\r\n        }\r\n    }\r\n  render() {\r\n    return (\r\n      <div className='categories'>\r\n        {this.state.categories.map(el => (\r\n            <div key={el.key} onClick={() => this.props.choose(el.key)}>{el.name}</div>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Categories","E:\\Курс программирования\\React Projects\\food-delivery\\src\\components\\ShowFullItem.js",["80"],[],"import React, { Component } from 'react'\r\nimport {FaPlus} from 'react-icons/fa'\r\n\r\nexport class ShowFullItem extends Component {\r\n  render() {\r\n    return (\r\n      <div className='full-item'>\r\n        <div>\r\n            <div className='image'>\r\n            <img src={'./images/'+this.props.item.img}/>\r\n            </div>\r\n            <div className='item-desc'>\r\n              <h2>{this.props.item.name}</h2>\r\n              <b>Цена: {this.props.item.price}сом</b>\r\n              <button className='add-to-cart-btn' onClick={() => this.props.onAdd(this.props.item)}><FaPlus/> Добавить</button>\r\n            </div>\r\n            <span class=\"close\" onClick={() => this.props.onShow(this.props.item)}>&times;</span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ShowFullItem\r\n\r\n","E:\\Курс программирования\\React Projects\\food-delivery\\src\\components\\Product.js",["81"],[],"import React, { Component } from 'react'\r\nimport {FaPlus} from 'react-icons/fa'\r\n\r\nexport class Product extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            current_size:this.props.item.sizes[1],\r\n            type:'традиционное'\r\n        }\r\n        this.setSize = this.setSize.bind(this)\r\n        this.setType = this.setType.bind(this)\r\n      }\r\n      render() {\r\n        return (\r\n          <div className='product-block'>\r\n            <div className='image' onClick={() => this.props.onShow(this.getItem())}>\r\n              <img src={'./images/'+this.props.item.img}/>\r\n            </div>\r\n            <h3>{this.props.item.name}</h3>\r\n            <div className='btns-group'>\r\n              <div className='types-btns'>\r\n                <div className={this.isActiveType('тонкое')} onClick={() => this.setType('тонкое')}>тонкое</div>\r\n                <div className={this.isActiveType('традиционное')} onClick={() => this.setType('традиционное')}>традиционное</div>\r\n              </div>\r\n              <div className='size-tabs'>{this.props.item.sizes.map(size => \r\n              <div key={size.size} className={this.isActiveSize(size)} onClick={() => this.setSize(size)}>{size.size}</div> \r\n                )}</div>\r\n            </div>\r\n            <div className='price-block'>\r\n              <b>{this.state.current_size.price}сом</b>\r\n              <button className='add-to-cart-btn' onClick={() => this.props.onAdd(this.getItem())}><FaPlus/> Добавить</button>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n      setType(type){\r\n        this.setState({type:type})\r\n      }\r\n      setSize(size){\r\n        this.setState({current_size:size})\r\n      }\r\n      getItem(){\r\n        const item = {\r\n          id:this.props.item.id,\r\n          name:this.props.item.name,\r\n          img:this.props.item.img,\r\n          type:this.state.type,\r\n          category:this.props.item.category,\r\n          size:this.state.current_size,\r\n          price:this.state.current_size.price\r\n        }\r\n        return item;\r\n      }\r\n      isActiveSize(size){\r\n        if (size === this.state.current_size) {\r\n          return 'size-tab active'\r\n        } else {\r\n          return 'size-tab'\r\n        }\r\n      }\r\n      isActiveType(type){\r\n        if (type === this.state.type) {\r\n          return 'type-btn active'\r\n        } else {\r\n          return 'type-btn'\r\n        }\r\n      }\r\n    }\r\n\r\n\r\nexport default Product\r\n","E:\\Курс программирования\\React Projects\\food-delivery\\src\\components\\Order.js",[],[],"E:\\Курс программирования\\React Projects\\food-delivery\\src\\components\\Cart.js",["82","83"],[],"import React, { Component, useState} from 'react'\r\nimport { FaShoppingCart, FaTrash } from \"react-icons/fa\";\r\nimport Order from './Order';\r\n\r\nconst showOrders = (props) => {\r\n    let summ = 0\r\n    props.orders.forEach(el => summ += el.count*Number.parseFloat(el.price));\r\n    return(\r\n      <div>\r\n        {props.orders.map(order => (\r\n          <Order onDelete={props.onDelete} onUp={props.onUp} onDown={props.onDown} key={order.id} item={order}/>\r\n        ))}\r\n        <div className='cart-tools'>\r\n          <p className='summ'>Сумма: {Intl.NumberFormat().format(summ)}сом</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\nconst showNothing = () => {\r\n  return(\r\n    <h2>Пока нет товаров</h2>\r\n  )\r\n}\r\n\r\nexport default function Cart(props){\r\n    let count = 0\r\n    props.orders.forEach(el => count += el.count);\r\n    let summ = 0\r\n    props.orders.forEach(el => summ += el.count*Number.parseFloat(el.price));\r\n    return (\r\n        <div className='cart-overlay'>\r\n            <div className='shop-cart'>\r\n                <div className='cart-header'>\r\n                    <h2>\r\n                        <FaShoppingCart/> Корзина\r\n                    </h2>\r\n                    <div className='clear-cart' onClick={() => props.onClear()}>\r\n                        <FaTrash className='delete-icon'/> Очистить корзину\r\n                    </div>\r\n                </div>\r\n                {props.orders.length > 0 \r\n                  ?showOrders(props)\r\n                  :showNothing()\r\n                }\r\n              </div>\r\n        </div>\r\n    )\r\n  }\r\n","E:\\Курс программирования\\React Projects\\food-delivery\\src\\store\\CartReducer.js",[],[],[],{"ruleId":"84","severity":1,"message":"85","line":8,"column":10,"nodeType":"86","messageId":"87","endLine":8,"endColumn":21},{"ruleId":"84","severity":1,"message":"88","line":8,"column":23,"nodeType":"86","messageId":"87","endLine":8,"endColumn":34},{"ruleId":"84","severity":1,"message":"89","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":26},{"ruleId":"84","severity":1,"message":"90","line":2,"column":26,"nodeType":"86","messageId":"87","endLine":2,"endColumn":33},{"ruleId":"84","severity":1,"message":"91","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":13},{"ruleId":"92","severity":1,"message":"93","line":15,"column":13,"nodeType":"94","endLine":15,"endColumn":33},{"ruleId":"95","severity":1,"message":"96","line":15,"column":33,"nodeType":"94","endLine":15,"endColumn":73},{"ruleId":"84","severity":1,"message":"97","line":2,"column":9,"nodeType":"86","messageId":"87","endLine":2,"endColumn":21},{"ruleId":"84","severity":1,"message":"98","line":2,"column":23,"nodeType":"86","messageId":"87","endLine":2,"endColumn":30},{"ruleId":"84","severity":1,"message":"99","line":2,"column":32,"nodeType":"86","messageId":"87","endLine":2,"endColumn":43},{"ruleId":"84","severity":1,"message":"100","line":2,"column":45,"nodeType":"86","messageId":"87","endLine":2,"endColumn":58},{"ruleId":"95","severity":1,"message":"96","line":10,"column":13,"nodeType":"94","endLine":10,"endColumn":57},{"ruleId":"95","severity":1,"message":"96","line":18,"column":15,"nodeType":"94","endLine":18,"endColumn":59},{"ruleId":"84","severity":1,"message":"89","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":26},{"ruleId":"84","severity":1,"message":"101","line":1,"column":28,"nodeType":"86","messageId":"87","endLine":1,"endColumn":36},"no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'Component' is defined but never used.","'FaTrash' is defined but never used.","'Order' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'FaPizzaSlice' is defined but never used.","'FaOrcid' is defined but never used.","'FaHamburger' is defined but never used.","'FaYCombinator' is defined but never used.","'useState' is defined but never used."]