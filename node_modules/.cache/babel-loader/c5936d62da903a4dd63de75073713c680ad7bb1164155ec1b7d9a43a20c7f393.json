{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u041A\\u0443\\u0440\\u0441 \\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F\\\\React Projects\\\\food-delivery\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport ProductsList from './components/ProductsList';\nimport data from './data';\nimport Header from './components/Header';\nimport Categories from './components/Categories';\nimport ShowFullItem from './components/ShowFullItem';\nimport Footer from './components/Footer';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// class App extends React.Component {\n//   constructor(props){\n//     super(props)\n//     this.state = {\n//       products:data,\n//       orders:[],\n//       fullItem:{},\n//       showFullItem:false,\n//     }\n//     this.state.current = this.state.products\n\n//     this.addToCart = this.addToCart.bind(this)\n//     this.clearCart = this.clearCart.bind(this)\n//     this.orderIncrement = this.orderIncrement.bind(this)\n//     this.orderDecrement = this.orderDecrement.bind(this)\n//     this.deleteOrder = this.deleteOrder.bind(this)\n//     this.onOpenItem = this.onOpenItem.bind(this)\n//     this.chooseCategory = this.chooseCategory.bind(this)\n//   }\n//   render(){\n//     const dispatch = useDispatch()\n//     const cart = useSelector(state => state.products)\n//     console.log(cart);\n//     return (\n//       <div className=\"App\">\n//         <Header onClear={this.clearCart}\n//         onDelete={this.deleteOrder} orders={this.state.orders}\n//          onUp={this.orderIncrement} onDown={this.orderDecrement}/>\n//          <main>\n//           <Categories choose={this.chooseCategory}/>\n//           <ProductsList onShow={this.onOpenItem} onAdd={this.addToCart} items={this.state.current}/>\n//           {this.state.showFullItem && <ShowFullItem onAdd={this.addToCart} onShow={this.onOpenItem} item={this.state.fullItem}/>}\n//           <Footer/>\n//          </main>\n//       </div>\n//     );\n//   }\n//   chooseCategory(category){\n//     if(category === 'all'){\n//       this.setState({current:this.state.products})\n//     }else{\n//       this.setState({current:this.state.products.filter(item => item.category === category)})\n//     }\n//   }\n//   onOpenItem(item){\n//     this.setState({showFullItem: !this.state.showFullItem, fullItem:item})\n//   }\n//   clearCart(){\n//     this.setState({orders: []})\n//   }\n//   deleteOrder(item){\n//     this.setState({orders: this.state.orders.filter(el => el !== item)})\n//   }\n//   addToCart(item){\n//     let isInCart = false\n//     this.state.orders.forEach(el => {\n//       if(item.id === el.id && item.size === el.size && item.type === el.type){\n//         isInCart = true\n//       }\n//     })\n//     if (isInCart) {\n//       const order = this.state.orders.find(el => el.id === item.id && el.size === item.size && item.type === el.type)\n//       order.count += 1\n//       this.setState({orders: this.state.orders.map(u => u !== order ? u : order)})\n//     } else {\n//       item.count = 1\n//       this.setState({orders: [...this.state.orders, item]})\n//     } \n//   }\n//   orderDecrement(item){\n//     if(item.count > 1){\n//       item.count -= 1\n//       this.setState({orders: this.state.orders.map(u => u !== item ? u : item)})\n//     }else{\n//       this.setState({orders: this.state.orders.filter(el => el !== item)})\n//     }\n//   }\n//   orderIncrement(item){\n//     item.count += 1\n//     this.setState({orders: this.state.orders.map(u => u !== item ? u : item)})\n//   }\n// }\n\n// export default App;\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.products);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(ProductsList, {\n        items: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"aiyLQC3w2loFGIOtPgvi9u4lMcI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ProductsList","data","Header","Categories","ShowFullItem","Footer","useDispatch","useSelector","React","App","dispatch","cart","state","products"],"sources":["E:/Курс программирования/React Projects/food-delivery/src/App.js"],"sourcesContent":["import ProductsList from './components/ProductsList';\nimport data from './data';\nimport Header from './components/Header';\nimport Categories from './components/Categories';\nimport ShowFullItem from './components/ShowFullItem';\nimport Footer from './components/Footer';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// class App extends React.Component {\n//   constructor(props){\n//     super(props)\n//     this.state = {\n//       products:data,\n//       orders:[],\n//       fullItem:{},\n//       showFullItem:false,\n//     }\n//     this.state.current = this.state.products\n\n//     this.addToCart = this.addToCart.bind(this)\n//     this.clearCart = this.clearCart.bind(this)\n//     this.orderIncrement = this.orderIncrement.bind(this)\n//     this.orderDecrement = this.orderDecrement.bind(this)\n//     this.deleteOrder = this.deleteOrder.bind(this)\n//     this.onOpenItem = this.onOpenItem.bind(this)\n//     this.chooseCategory = this.chooseCategory.bind(this)\n//   }\n//   render(){\n//     const dispatch = useDispatch()\n//     const cart = useSelector(state => state.products)\n//     console.log(cart);\n//     return (\n//       <div className=\"App\">\n//         <Header onClear={this.clearCart}\n//         onDelete={this.deleteOrder} orders={this.state.orders}\n//          onUp={this.orderIncrement} onDown={this.orderDecrement}/>\n//          <main>\n//           <Categories choose={this.chooseCategory}/>\n//           <ProductsList onShow={this.onOpenItem} onAdd={this.addToCart} items={this.state.current}/>\n//           {this.state.showFullItem && <ShowFullItem onAdd={this.addToCart} onShow={this.onOpenItem} item={this.state.fullItem}/>}\n//           <Footer/>\n//          </main>\n//       </div>\n//     );\n//   }\n//   chooseCategory(category){\n//     if(category === 'all'){\n//       this.setState({current:this.state.products})\n//     }else{\n//       this.setState({current:this.state.products.filter(item => item.category === category)})\n//     }\n//   }\n//   onOpenItem(item){\n//     this.setState({showFullItem: !this.state.showFullItem, fullItem:item})\n//   }\n//   clearCart(){\n//     this.setState({orders: []})\n//   }\n//   deleteOrder(item){\n//     this.setState({orders: this.state.orders.filter(el => el !== item)})\n//   }\n//   addToCart(item){\n//     let isInCart = false\n//     this.state.orders.forEach(el => {\n//       if(item.id === el.id && item.size === el.size && item.type === el.type){\n//         isInCart = true\n//       }\n//     })\n//     if (isInCart) {\n//       const order = this.state.orders.find(el => el.id === item.id && el.size === item.size && item.type === el.type)\n//       order.count += 1\n//       this.setState({orders: this.state.orders.map(u => u !== order ? u : order)})\n//     } else {\n//       item.count = 1\n//       this.setState({orders: [...this.state.orders, item]})\n//     } \n//   }\n//   orderDecrement(item){\n//     if(item.count > 1){\n//       item.count -= 1\n//       this.setState({orders: this.state.orders.map(u => u !== item ? u : item)})\n//     }else{\n//       this.setState({orders: this.state.orders.filter(el => el !== item)})\n//     }\n//   }\n//   orderIncrement(item){\n//     item.count += 1\n//     this.setState({orders: this.state.orders.map(u => u !== item ? u : item)})\n//   }\n// }\n\n// export default App;\n\nimport React from 'react'\n\nfunction App() {\n  const dispatch = useDispatch()\n    const cart = useSelector(state => state.products)\n    return (\n      <div className=\"App\">\n        {/* <Header onClear={this.clearCart}\n        onDelete={this.deleteOrder} orders={this.state.orders}\n         onUp={this.orderIncrement} onDown={this.orderDecrement}/>\n         <main>\n          <Categories choose={this.chooseCategory}/>\n          <ProductsList onShow={this.onOpenItem} onAdd={this.addToCart} items={this.state.current}/>\n          {this.state.showFullItem && <ShowFullItem onAdd={this.addToCart} onShow={this.onOpenItem} item={this.state.fullItem}/>}\n          <Footer/>\n         </main> */}\n         <main>\n          <ProductsList items={data}/>\n         </main>\n      </div>\n    );\n}\n\nexport default App"],"mappings":";;AAAA,OAAOA,YAAY,MAAM,2BAA2B;AACpD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOC,KAAK,MAAM,OAAO;AAAA;AAEzB,SAASC,GAAG,GAAG;EAAA;EACb,MAAMC,QAAQ,GAAGJ,WAAW,EAAE;EAC5B,MAAMK,IAAI,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,QAAQ,CAAC;EACjD,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAUjB;MAAA,uBACC,QAAC,YAAY;QAAC,KAAK,EAAEZ;MAAK;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA;EACtB;IAAA;IAAA;IAAA;EAAA,QACJ;AAEZ;AAAC,GAnBQQ,GAAG;EAAA,QACOH,WAAW,EACbC,WAAW;AAAA;AAAA,KAFnBE,GAAG;AAqBZ,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}